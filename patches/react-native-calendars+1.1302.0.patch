diff --git a/node_modules/react-native-calendars/src/expandableCalendar/WeekCalendar/new.js b/node_modules/react-native-calendars/src/expandableCalendar/WeekCalendar/new.js
index b7e3a65..e704715 100644
--- a/node_modules/react-native-calendars/src/expandableCalendar/WeekCalendar/new.js
+++ b/node_modules/react-native-calendars/src/expandableCalendar/WeekCalendar/new.js
@@ -11,6 +11,7 @@ import { extractCalendarProps } from '../../componentUpdater';
 import constants from '../../commons/constants';
 import { UpdateSources } from '../commons';
 import { sameWeek } from '../../dateutils';
+import {Matrics} from '../../../../../src/constants'
 const NUMBER_OF_PAGES = 50;
 const DEFAULT_PAGE_HEIGHT = 48;
 const WeekCalendar = (props) => {
@@ -56,7 +57,7 @@ const WeekCalendar = (props) => {
         return (<Week {...others} key={item} current={isSameWeek ? date : item} firstDay={firstDay} style={weekStyle} markedDates={markedDates} onDayPress={onDayPress} context={context}/>);
     }, [date, markedDates]);
     return (<View testID={testID} style={[allowShadow && style.current.containerShadow, !hideDayNames && style.current.containerWrapper]}>
-      {!hideDayNames && (<View style={[style.current.week, style.current.weekCalendar]}>
+      {!hideDayNames && (<View style={[style.current.week, style.current.weekCalendar,{ paddingLeft: Matrics.s(3), paddingRight: Matrics.s(3), marginTop: Matrics.vs(10), marginBottom: Matrics.vs(1), paddingBottom: 0 }]}>
           <WeekDaysNames firstDay={firstDay} style={style.current.dayHeader}/>
         </View>)}
       <View>
diff --git a/node_modules/react-native-calendars/src/expandableCalendar/index.js b/node_modules/react-native-calendars/src/expandableCalendar/index.js
index 4fb12b0..c262999 100644
--- a/node_modules/react-native-calendars/src/expandableCalendar/index.js
+++ b/node_modules/react-native-calendars/src/expandableCalendar/index.js
@@ -16,6 +16,9 @@ import WeekCalendar from './WeekCalendar';
 import Context from './Context';
 import constants from '../commons/constants';
 import { UpdateSources } from './commons';
+import {Matrics} from '../../../../src/constants'
+import {Icons} from '../../../../src/constants/icons'
+
 export var Positions;
 (function (Positions) {
     Positions["CLOSED"] = "closed";
@@ -280,7 +283,7 @@ const ExpandableCalendar = (props) => {
                 speed: SPEED,
                 bounciness: BOUNCINESS,
                 useNativeDriver: false
-            }).start();
+              }).start();
             onCalendarToggled?.(_isOpen);
             setPosition(() => _height.current === closedHeight ? Positions.CLOSED : Positions.OPEN);
             closeHeader(_isOpen);
@@ -384,7 +387,20 @@ const ExpandableCalendar = (props) => {
     };
     const renderKnob = () => {
         return (<View style={style.current.knobContainer} pointerEvents={'box-none'}>
-        <TouchableOpacity style={style.current.knob} testID={`${testID}.knob`} onPress={toggleCalendarPosition} hitSlop={knobHitSlop} /* activeOpacity={isOpen ? undefined : 1} *//>
+            <TouchableOpacity
+        style={{
+            opacity: 1,
+    justifyContent: 'center',
+    alignItems: 'center',
+    alignSelf: 'center',
+    paddingHorizontal: Matrics.s(10),
+        }}
+        hitSlop={knobHitSlop}
+        onPress={toggleCalendarPosition}>
+        {isOpen ? <Icons.ShowMore /> : <Icons.ShowLess />}
+      </TouchableOpacity>
+         {/* <TouchableOpacity style={style.current.knob} testID={`${testID}.knob`} onPress={toggleCalendarPosition} hitSlop={knobHitSlop}
+         /* activeOpacity={isOpen ? undefined : 1} />  */}
       </View>);
     };
     const renderWeekCalendar = () => {
